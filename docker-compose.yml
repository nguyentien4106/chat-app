version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: chatapp-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Ti100600@
      POSTGRES_DB: ChatAppIntegration
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - chatapp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: chatapp-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@chatapp.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - chatapp-network
    depends_on:
      - postgres

  api:
    build:
      context: ./src
      dockerfile: ChatApp.Api/Dockerfile
    container_name: chatapp-api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:6060
      ConnectionStrings__DefaultConnection: "Host=postgres;Database=ChatAppIntegration;Username=postgres;Password=Ti100600@;"
    ports:
      - "6060:6060"
    networks:
      - chatapp-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  pgadmin_data:

networks:
  chatapp-network:
    driver: bridge
